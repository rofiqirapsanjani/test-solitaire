name: Docker Image CI

on:
  push:
    branches: ["main"]
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1 # cluster name
  GKE_ZONE: europe-central2 # cluster zone
  IMAGE: micro # image name
  IMAGE_TAG: test # image tag
  GAR_ZONE: europe-central2 # artifact registry zone
  GAR_REPO: obiwan # artifact registry repository

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Create Release Tag
        run: |
          git tag -a "${{ github.event.inputs.tag }}" -m "Release ${{ github.event.inputs.tag }}"
          git push origin "${{ github.event.inputs.tag }}"

  setup-build-publish-deploy:
    needs: release
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup gcloud CLI
      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      # Configure Docker to use the gcloud command-line tool as a credential
      # helper for authentication
      - name: Docker configuration
        run: |-
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://$GAR_ZONE-docker.pkg.dev

      # Get the GKE credentials so we can deploy to the cluster
      - name: Set up GKE credentials
        uses: google-github-actions/get-gke-credentials@v0
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      # Build the Docker image
      - name: Build
        run: |-
          docker build \
            --tag "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$IMAGE_TAG" \
            --build-arg GITHUB_SHA="$GITHUB_SHA" \
            --build-arg GITHUB_REF="$GITHUB_REF" \
            .
      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "$GAR_ZONE-docker.pkg.dev/$PROJECT_ID/$GAR_REPO/$IMAGE:$IMAGE_TAG"

      # Deploy the Docker image to the GKE cluster
      - name: Deploy
        run: |-
          kubectl apply -f welcome-deployment.yaml
          kubectl get pods
